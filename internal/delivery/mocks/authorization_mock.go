// Code generated by MockGen. DO NOT EDIT.
// Source: internal/delivery/authorization.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gin "github.com/gin-gonic/gin"
	gomock "github.com/golang/mock/gomock"
)

// MockPolicyGateway is a mock of PolicyGateway interface.
type MockPolicyGateway struct {
	ctrl     *gomock.Controller
	recorder *MockPolicyGatewayMockRecorder
}

// MockPolicyGatewayMockRecorder is the mock recorder for MockPolicyGateway.
type MockPolicyGatewayMockRecorder struct {
	mock *MockPolicyGateway
}

// NewMockPolicyGateway creates a new mock instance.
func NewMockPolicyGateway(ctrl *gomock.Controller) *MockPolicyGateway {
	mock := &MockPolicyGateway{ctrl: ctrl}
	mock.recorder = &MockPolicyGatewayMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPolicyGateway) EXPECT() *MockPolicyGatewayMockRecorder {
	return m.recorder
}

// Ask mocks base method.
func (m *MockPolicyGateway) Ask(arg0 *gin.Context) bool {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Ask", arg0)
	ret0, _ := ret[0].(bool)
	return ret0
}

// Ask indicates an expected call of Ask.
func (mr *MockPolicyGatewayMockRecorder) Ask(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Ask", reflect.TypeOf((*MockPolicyGateway)(nil).Ask), arg0)
}
