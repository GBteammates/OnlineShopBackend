basePath: /
definitions:
  cart.Cart:
    properties:
      id:
        example: 00000000-0000-0000-0000-000000000000
        format: uuid
        type: string
      items:
        items:
          $ref: '#/definitions/cart.CartItem'
        minItems: 0
        type: array
      userId:
        example: 00000000-0000-0000-0000-000000000000
        format: uuid
        type: string
    required:
    - id
    type: object
  cart.CartId:
    properties:
      id:
        example: 00000000-0000-0000-0000-000000000000
        format: uuid
        type: string
    required:
    - id
    type: object
  cart.CartItem:
    properties:
      item:
        $ref: '#/definitions/cart.Item'
      quantity:
        $ref: '#/definitions/cart.Quantity'
    type: object
  cart.Category:
    properties:
      description:
        example: Электротехнические товары для дома
        type: string
      id:
        example: 00000000-0000-0000-0000-000000000000
        format: uuid
        type: string
      image:
        type: string
      name:
        example: Электротехника
        type: string
    required:
    - description
    - id
    - name
    type: object
  cart.Item:
    properties:
      category:
        $ref: '#/definitions/cart.Category'
      image:
        type: string
      itemId:
        example: 00000000-0000-0000-0000-000000000000
        format: uuid
        type: string
      price:
        default: 10
        example: 1990
        minimum: 0
        type: integer
      title:
        example: Пылесос
        type: string
    required:
    - itemId
    - price
    - title
    type: object
  cart.Quantity:
    properties:
      quantity:
        default: 1
        example: 3
        minimum: 1
        type: integer
    required:
    - quantity
    type: object
  cart.ShortCart:
    properties:
      cartId:
        example: 00000000-0000-0000-0000-000000000000
        format: uuid
        type: string
      itemId:
        example: 00000000-0000-0000-0000-000000000000
        format: uuid
        type: string
    required:
    - cartId
    - itemId
    type: object
  category.Category:
    properties:
      description:
        example: Электротехнические товары для дома
        type: string
      id:
        example: 00000000-0000-0000-0000-000000000000
        format: uuid
        type: string
      image:
        type: string
      name:
        example: Электротехника
        type: string
    required:
    - description
    - id
    - name
    type: object
  category.CategoryId:
    properties:
      id:
        example: 00000000-0000-0000-0000-000000000000
        format: uuid
        type: string
    required:
    - id
    type: object
  category.ShortCategory:
    properties:
      description:
        example: Электротехнические товары для дома
        type: string
      image:
        type: string
      name:
        example: Электротехника
        type: string
    required:
    - description
    - name
    type: object
  delivery.ErrorResponse:
    properties:
      errors:
        items:
          type: string
        type: array
      id:
        type: string
      info: {}
      message:
        type: string
    type: object
  file.FileListResponse:
    properties:
      files:
        items:
          $ref: '#/definitions/file.FilesInfo'
        type: array
    type: object
  file.FilesInfo:
    properties:
      createdDate:
        example: 2022-12-13 12:46:16.0964549 +0300 MSK
        type: string
      modifyDate:
        example: 2022-12-13 12:46:16.0964549 +0300 MSK
        type: string
      name:
        example: 20221213125935.jpeg
        type: string
      path:
        example: storage\files\categories\d0d3df2d-f6c8-4956-9d76-998ee1ec8a39\20221213125935.jpeg
        type: string
    type: object
  item.InItem:
    properties:
      category:
        example: 00000000-0000-0000-0000-000000000000
        format: uuid
        type: string
      description:
        example: Мощность всасывания 1.5 кВт
        type: string
      id:
        example: 00000000-0000-0000-0000-000000000000
        format: uuid
        type: string
      image:
        items:
          type: string
        type: array
      price:
        default: 10
        example: 1990
        minimum: 0
        type: integer
      title:
        example: Пылесос
        type: string
      vendor:
        example: Витязь
        type: string
    required:
    - category
    - description
    - id
    - price
    - title
    - vendor
    type: object
  item.ItemId:
    properties:
      id:
        example: 00000000-0000-0000-0000-000000000000
        format: uuid
        type: string
    required:
    - id
    type: object
  item.ItemsQuantity:
    properties:
      quantity:
        default: 0
        example: 10
        minimum: 0
        type: integer
    type: object
  item.OutItem:
    properties:
      category:
        $ref: '#/definitions/category.Category'
      description:
        example: Мощность всасывания 1.5 кВт
        type: string
      id:
        example: 00000000-0000-0000-0000-000000000000
        format: uuid
        type: string
      image:
        items:
          type: string
        type: array
      price:
        default: 10
        example: 1990
        minimum: 0
        type: integer
      title:
        example: Пылесос
        type: string
      vendor:
        example: Витязь
        type: string
    required:
    - category
    - description
    - id
    - price
    - title
    - vendor
    type: object
  item.ShortItem:
    properties:
      category:
        example: 00000000-0000-0000-0000-000000000000
        format: uuid
        type: string
      description:
        example: Мощность всасывания 1.5 кВт
        type: string
      image:
        items:
          type: string
        type: array
      price:
        default: 10
        example: 1990
        minimum: 0
        type: integer
      title:
        example: Пылесос
        type: string
      vendor:
        example: Витязь
        type: string
    required:
    - description
    - price
    - title
    type: object
info:
  contact:
    url: https://github.com/GBteammates/OnlineShopBackend
  description: Backend service for online store
  license:
    name: MIT
  title: Online Shop Backend Service
  version: "1.0"
paths:
  /cart/{cartID}:
    get:
      consumes:
      - application/json
      description: The method allows you to get the cart by id.
      parameters:
      - description: Id of cart
        in: path
        name: cartID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Cart structure
          schema:
            $ref: '#/definitions/cart.Cart'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/delivery.ErrorResponse'
        "403":
          description: Forbidden
        "404":
          description: 404 Not Found
          schema:
            $ref: '#/definitions/delivery.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/delivery.ErrorResponse'
      summary: Get cart by id
      tags:
      - carts
  /cart/addItem:
    put:
      consumes:
      - application/json
      description: Method provides to add item to cart.
      parameters:
      - description: Data for add item to cart
        in: body
        name: cart
        required: true
        schema:
          $ref: '#/definitions/cart.ShortCart'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/delivery.ErrorResponse'
        "403":
          description: Forbidden
        "404":
          description: 404 Not Found
          schema:
            $ref: '#/definitions/delivery.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/delivery.ErrorResponse'
      summary: Method provides to add item to cart
      tags:
      - carts
  /cart/create/{userID}:
    post:
      consumes:
      - application/json
      description: Method provides to create cart with items.
      parameters:
      - description: Id of user (if user autorized)
        in: path
        name: userID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/cart.CartId'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/delivery.ErrorResponse'
        "403":
          description: Forbidden
        "404":
          description: 404 Not Found
          schema:
            $ref: '#/definitions/delivery.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/delivery.ErrorResponse'
      summary: Method provides to create cart with items
      tags:
      - carts
  /cart/delete/{cartID}:
    delete:
      consumes:
      - application/json
      description: Method provides to delete cart.
      parameters:
      - description: id of cart
        in: path
        name: cartID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/delivery.ErrorResponse'
        "403":
          description: Forbidden
        "404":
          description: 404 Not Found
          schema:
            $ref: '#/definitions/delivery.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/delivery.ErrorResponse'
      summary: Method provides to delete cart
      tags:
      - carts
  /cart/delete/{cartID}/{itemID}:
    delete:
      consumes:
      - application/json
      description: Method provides to delete item from cart.
      parameters:
      - description: id of cart
        in: path
        name: cartID
        required: true
        type: string
      - description: id of item
        in: path
        name: itemID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/delivery.ErrorResponse'
        "403":
          description: Forbidden
        "404":
          description: 404 Not Found
          schema:
            $ref: '#/definitions/delivery.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/delivery.ErrorResponse'
      summary: Method provides to delete item from cart
      tags:
      - carts
  /categories/{categoryID}:
    get:
      consumes:
      - application/json
      description: The method allows you to get the category by id.
      parameters:
      - description: Id of category
        in: path
        name: categoryID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Category structure
          schema:
            $ref: '#/definitions/category.Category'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/delivery.ErrorResponse'
        "403":
          description: Forbidden
        "404":
          description: 404 Not Found
          schema:
            $ref: '#/definitions/delivery.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/delivery.ErrorResponse'
      summary: Get category by id
      tags:
      - categories
  /categories/create:
    post:
      consumes:
      - application/json
      description: Method provides to create category of items.
      parameters:
      - description: Data for creating category
        in: body
        name: category
        required: true
        schema:
          $ref: '#/definitions/category.ShortCategory'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/category.CategoryId'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/delivery.ErrorResponse'
        "403":
          description: Forbidden
        "404":
          description: 404 Not Found
          schema:
            $ref: '#/definitions/delivery.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/delivery.ErrorResponse'
      summary: Method provides to create category of items
      tags:
      - categories
  /categories/delete/{categoryID}:
    delete:
      consumes:
      - application/json
      description: Method provides to delete category.
      parameters:
      - description: id of category
        in: path
        name: categoryID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/delivery.ErrorResponse'
        "403":
          description: Forbidden
        "404":
          description: 404 Not Found
          schema:
            $ref: '#/definitions/delivery.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/delivery.ErrorResponse'
      summary: Method provides to delete category
      tags:
      - categories
  /categories/image/delete:
    delete:
      consumes:
      - application/json
      description: The method allows you to delete a category image by category id.
      parameters:
      - description: Category id
        in: query
        name: id
        required: true
        type: string
      - description: Image name
        in: query
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/delivery.ErrorResponse'
        "403":
          description: Forbidden
        "404":
          description: 404 Not Found
          schema:
            $ref: '#/definitions/delivery.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/delivery.ErrorResponse'
      summary: Delete a category image by category id
      tags:
      - categories
  /categories/image/upload/:categoryID:
    post:
      consumes:
      - application/json
      description: Method provides to upload an image of category.
      parameters:
      - description: id of category
        in: path
        name: id
        required: true
        type: string
      - description: picture of category
        in: formData
        name: image
        required: true
        type: file
      produces:
      - application/json
      responses:
        "201":
          description: Created
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/delivery.ErrorResponse'
        "403":
          description: Forbidden
        "404":
          description: 404 Not Found
          schema:
            $ref: '#/definitions/delivery.ErrorResponse'
        "415":
          description: Unsupported Media Type
          schema:
            $ref: '#/definitions/delivery.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/delivery.ErrorResponse'
        "507":
          description: Insufficient Storage
          schema:
            $ref: '#/definitions/delivery.ErrorResponse'
      summary: Upload an image of category
      tags:
      - categories
  /categories/list:
    get:
      consumes:
      - application/json
      description: Method provides to get list of categories
      produces:
      - application/json
      responses:
        "200":
          description: List of categories
          schema:
            items:
              $ref: '#/definitions/category.Category'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/delivery.ErrorResponse'
        "403":
          description: Forbidden
        "404":
          description: 404 Not Found
          schema:
            $ref: '#/definitions/delivery.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/delivery.ErrorResponse'
      summary: Get list of categories
      tags:
      - categories
  /categories/update:
    put:
      consumes:
      - application/json
      description: Method provides to update category.
      parameters:
      - description: id of category
        in: path
        name: id
        required: true
        type: string
      - description: Data for updating category
        in: body
        name: category
        required: true
        schema:
          $ref: '#/definitions/category.ShortCategory'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/delivery.ErrorResponse'
        "403":
          description: Forbidden
        "404":
          description: 404 Not Found
          schema:
            $ref: '#/definitions/delivery.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/delivery.ErrorResponse'
      summary: Method provides to update category
      tags:
      - categories
  /images/list:
    get:
      consumes:
      - application/json
      description: Method provides to get list of files.
      produces:
      - application/json
      responses:
        "200":
          description: List of files
          schema:
            $ref: '#/definitions/file.FileListResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/delivery.ErrorResponse'
        "403":
          description: Forbidden
        "404":
          description: 404 Not Found
          schema:
            $ref: '#/definitions/delivery.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/delivery.ErrorResponse'
      summary: Get list of files
      tags:
      - files
  /items:
    get:
      consumes:
      - application/json
      description: Method provides to get list of items by category name
      parameters:
      - description: Category name
        in: query
        name: param
        type: string
      - default: 10
        description: Quantity of recordings
        in: query
        minimum: 0
        name: limit
        type: integer
      - default: 0
        description: Offset when receiving records
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: List of items
          schema:
            items:
              $ref: '#/definitions/item.OutItem'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/delivery.ErrorResponse'
        "403":
          description: Forbidden
        "404":
          description: 404 Not Found
          schema:
            $ref: '#/definitions/delivery.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/delivery.ErrorResponse'
      summary: Get list of items by category name
      tags:
      - items
  /items/{itemID}:
    get:
      consumes:
      - application/json
      description: The method allows you to get the product by id.
      parameters:
      - description: id of item
        in: path
        name: itemID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Item structure
          schema:
            $ref: '#/definitions/item.OutItem'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/delivery.ErrorResponse'
        "403":
          description: Forbidden
        "404":
          description: 404 Not Found
          schema:
            $ref: '#/definitions/delivery.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/delivery.ErrorResponse'
      summary: Get item by id
      tags:
      - items
  /items/create/:
    post:
      consumes:
      - application/json
      description: Method provides to create store item
      parameters:
      - description: Data for creating item
        in: body
        name: item
        required: true
        schema:
          $ref: '#/definitions/item.ShortItem'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/item.ItemId'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/delivery.ErrorResponse'
        "403":
          description: Forbidden
        "404":
          description: 404 Not Found
          schema:
            $ref: '#/definitions/delivery.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/delivery.ErrorResponse'
      summary: Method provides to create store item
      tags:
      - items
  /items/delete/{itemID}:
    delete:
      consumes:
      - application/json
      description: Method provides to delete item.
      parameters:
      - description: id of item
        in: path
        name: itemID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/delivery.ErrorResponse'
        "403":
          description: Forbidden
        "404":
          description: 404 Not Found
          schema:
            $ref: '#/definitions/delivery.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/delivery.ErrorResponse'
      summary: Method provides to delete item
      tags:
      - items
  /items/image/delete:
    delete:
      consumes:
      - application/json
      description: The method allows you to delete an item image by item id.
      parameters:
      - description: Item id
        in: query
        name: id
        required: true
        type: string
      - description: Image name
        in: query
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/delivery.ErrorResponse'
        "403":
          description: Forbidden
        "404":
          description: 404 Not Found
          schema:
            $ref: '#/definitions/delivery.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/delivery.ErrorResponse'
      summary: Delete an item image by item id
      tags:
      - items
  /items/image/upload/:itemID:
    post:
      consumes:
      - application/json
      description: Method provides to upload an image of item
      parameters:
      - description: id of item
        in: path
        name: id
        required: true
        type: string
      - description: picture of item
        in: formData
        name: image
        required: true
        type: file
      produces:
      - application/json
      responses:
        "201":
          description: Created
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/delivery.ErrorResponse'
        "403":
          description: Forbidden
        "404":
          description: 404 Not Found
          schema:
            $ref: '#/definitions/delivery.ErrorResponse'
        "415":
          description: Unsupported Media Type
          schema:
            $ref: '#/definitions/delivery.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/delivery.ErrorResponse'
        "507":
          description: Insufficient Storage
          schema:
            $ref: '#/definitions/delivery.ErrorResponse'
      summary: Upload an image of item
      tags:
      - items
  /items/list:
    get:
      consumes:
      - application/json
      description: Method provides to get list of items
      parameters:
      - default: 10
        description: Quantity of recordings
        in: query
        minimum: 0
        name: limit
        type: integer
      - default: 0
        description: Offset when receiving records
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: List of items
          schema:
            items:
              $ref: '#/definitions/item.OutItem'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/delivery.ErrorResponse'
        "403":
          description: Forbidden
        "404":
          description: 404 Not Found
          schema:
            $ref: '#/definitions/delivery.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/delivery.ErrorResponse'
      summary: Get list of items
      tags:
      - items
  /items/quantity:
    get:
      consumes:
      - application/json
      description: Method provides to get quantity of items
      produces:
      - application/json
      responses:
        "200":
          description: Quantity of items
          schema:
            $ref: '#/definitions/item.ItemsQuantity'
        "403":
          description: Forbidden
        "404":
          description: 404 Not Found
          schema:
            $ref: '#/definitions/delivery.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/delivery.ErrorResponse'
      summary: Get quantity of items
      tags:
      - items
  /items/search:
    get:
      consumes:
      - application/json
      description: Method provides to get list of items by search parameters
      parameters:
      - description: Search param
        in: query
        name: param
        type: string
      - default: 10
        description: Quantity of recordings
        in: query
        minimum: 0
        name: limit
        type: integer
      - default: 0
        description: Offset when receiving records
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: List of items
          schema:
            items:
              $ref: '#/definitions/item.OutItem'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/delivery.ErrorResponse'
        "403":
          description: Forbidden
        "404":
          description: 404 Not Found
          schema:
            $ref: '#/definitions/delivery.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/delivery.ErrorResponse'
      summary: Get list of items by search parameters
      tags:
      - items
  /items/update:
    put:
      consumes:
      - application/json
      description: Method provides to update store item
      parameters:
      - description: Data for updating item
        in: body
        name: item
        required: true
        schema:
          $ref: '#/definitions/item.InItem'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/delivery.ErrorResponse'
        "403":
          description: Forbidden
        "404":
          description: 404 Not Found
          schema:
            $ref: '#/definitions/delivery.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/delivery.ErrorResponse'
      summary: Method provides to update store item
      tags:
      - items
swagger: "2.0"
